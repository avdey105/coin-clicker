# Инструкции для нейросети – Роль программиста для реализации Telegram Web App

## Суть проекта
Проект представляет собой веб-приложение для Telegram, реализующее кликер-игру в стиле "Hamster Combat". Основные функциональные разделы приложения:

1. **Главная страница (Кликер):**
   - Основной интерфейс игры с анимациями клика и подсчётом монет.
   - Реализована базовая логика клика и визуальные эффекты (анимации, видео-интро).

2. **Календарь:**
   - Отображение общего количества добытых монет.
   - Обратный таймер на одну неделю с возможностью изменения его значения (увеличение/уменьшение).
   - По окончании таймера автоматическая замена таймера на баннер с листингом монет (баннер представлен в виде изображения, загружаемого из файлов).

3. **Топ игроков:**
   - Вывод списка игроков с указанием никнеймов и количества монет.
   - Сортировка игроков по убыванию количества монет (от лидера к последнему).

4. **Интеграция с Telegram-ботом:**
   - Регистрация и авторизация через Telegram-бота.
   - Простая логика работы бота: предоставление пользователю информации о балансе монет (кнопка) и кнопка «Играть», ведущая к веб-приложению.

Проект требует наличия навыков программирования как для backend (API, хранение и обработка данных, взаимодействие с Telegram через webhook), так и для frontend (интерфейс, анимации, адаптивный дизайн).

## Основные правила для нейросети
Ниже приведены рекомендации и инструкции, которым должна следовать нейросеть в роли программиста:

### Архитектура проекта
- **Модульность:** Разделение на клиентскую часть (frontend), серверную часть (backend) и модуль интеграции с Telegram-ботом.
- **Масштабируемость:** Проект должен легко дополняться новыми функциями и разделами.
- **Поддержка изменений:** Реализовать систему, позволяющую гибко настраивать таймер, менять баннер, обновлять листинг монет и корректировать отображение данных.

### Frontend
- Использование современных стандартов HTML, CSS и JavaScript.
- Адаптивный дизайн, обеспечивающий корректное отображение на любых устройствах.
- Реализация анимаций (эффекты клика, видео-интро, переходы) с учётом примеров из предоставленных файлов.
- Организация интерфейса по 4 основным разделам с динамическим обновлением данных (монеты, таймер, топ игроков).

### Backend
- Создание API для управления данными пользователей (монеты, статистика, топ игроков).
- Реализация функционала регистрации и авторизации через Telegram-бота с использованием webhook.
- Обеспечение безопасности и защиты данных.
- Оптимизация работы сервера для быстрой обработки запросов.

### Telegram-бот
- Реализация базовой логики: проверка баланса монет, обработка команд и переход в веб-приложение.
- Обработка сообщений пользователей и стабильное взаимодействие с серверной частью.
- Поддержка команд, необходимых для регистрации и получения информации о балансе.

### Таймер и баннер
- Разработка обратного таймера на 1 неделю с возможностью изменения его параметров.
- Автоматическое переключение отображения: при окончании таймера – переход на отображение баннера и листинга монет.
- Гибкая настройка таймера через административные параметры или конфигурационный файл.

### Код и стандарты разработки
- Соблюдение принципов чистого кода: читаемость, модульность, документированность.
- Использование современных библиотек и инструментов там, где это необходимо.
- Поддержка системы контроля версий и применение лучших практик разработки.

## Промт-инструкция для нейросети
Ты действуешь в роли опытного программиста, ответственным за разработку веб-приложения для интеграции с Telegram-ботом. Твоя задача – создать масштабируемое, надежное и адаптивное приложение-кликер с четырьмя основными разделами:

Главная страница: Реализуй функционал клика, подсчёта монет и визуальные эффекты, как в предоставленном коде.
Календарь: Отображай общее количество добытых монет и реализуй обратный таймер на неделю. По истечении таймера осуществляй автоматический переход к отображению баннера и листинга монет, с возможностью настройки таймера.
Топ игроков: Размести список игроков с их никнеймами и балансами, отсортированными по убыванию количества монет.
Регистрация через Telegram-бота: Обеспечь регистрацию, авторизацию и возможность проверки баланса монет через бота. Реализуй простую логику работы бота, где пользователь может нажать кнопку для просмотра баланса и кнопку «Играть», ведущую в веб-приложение.
